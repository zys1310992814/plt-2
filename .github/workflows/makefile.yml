name: Makefile CI

on:
  # 触发条件：推送以 v 开头的标签（如 v1.0.0）
  push:
    tags:
      - 'v*'
  # 可选：允许手动触发（调试用）
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
    # --------------------------
    # 步骤 1：检出代码（获取完整提交历史）
    # --------------------------
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 必须设置为 0，否则无法生成完整的变更日志
    # --------------------------
    # 步骤 2：设置环境
    # --------------------------
      - name: Install dependencies
        run: |
          TUNA_SOURCE=" https://mirrors.tuna.tsinghua.edu.cn/ubuntu "
          CODENAME=$(lsb_release -cs)

          # 生成 sources.list（严格格式）
          sudo tee /etc/apt/sources.list <<'EOF'
          # 清华大学开源软件镜像站（Ubuntu）
          deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  jammy main restricted universe multiverse
          deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  jammy main restricted universe multiverse

          deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  jammy-updates main restricted universe multiverse
          deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  jammy-updates main restricted universe multiverse

          deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  jammy-backports main restricted universe multiverse
          deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  jammy-backports main restricted universe multiverse

          deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  jammy-security main restricted universe multiverse
          deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  jammy-security main restricted universe multiverse
          EOF

          # 强制使用 LF 换行符（避免 Windows 格式）
          sudo sed -i 's/\r$//' /etc/apt/sources.list
  
          sudo chmod 644 /etc/apt/sources.list
          sudo chmod 755 /etc/apt
          sudo apt-get update -y
          sudo apt-get install -y libc6-dev-i386 build-essential
          make test

    # --------------------------
    # 步骤 5：生成变更日志（CHANGELOG.md）
    # --------------------------
      - name: Generate changelog
        if: github.ref_type == 'tag'
        uses: heinrichreimer/github-changelog-generator-action@v2.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # 必须，用于访问 GitHub API
          release-sections: '## What iss Changed'  # 自定义变更日志格式
          output-file: 'CHANGELOG.md'  # 输出到 CHANGELOG.md
          since-tag: ${{ github.ref_name }}  # 仅生成当前标签后的变更（可选）

    # --------------------------
    # 步骤 6：创建 GitHub Release 并上传资产
    # --------------------------
      - name: Create Release
        if: github.ref_type == 'tag'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}  # 自动使用触发标签（如 v1.0.0）
          name: 'Release ${{ github.ref_name }}'  # Release 名称（可选）
          body_path: CHANGELOG.md  # 从文件读取变更日志
          files: ./*  # 上传打包后的产物
          draft: false  # 直接发布（非草稿）
          prerelease: ${{ contains(github.ref_name, '-') }}  # 标签含 '-' 则为预发布（如 v1.0.0-rc1）
          target_commitish: main  # 关联 main 分支的最新提交
